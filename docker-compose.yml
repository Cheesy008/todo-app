version: "3.5"
services:
  frontend:
    build: 
      context: ./frontend
    env_file: 
      - ./frontend/.env
    volumes: 
      - "./frontend:/app"
      - "/app/node_modules"
    depends_on: 
      - backend
    ports: 
      - "8080:8080"

  backend:
    build:
      context: ./backend
    env_file:
      - ./backend/.env
    volumes:
      - "./backend:/code"
    depends_on:
      - postgres
    ports:
      - "8000:8000"

  postgres:
    image: postgres:11.6-alpine
    volumes:
      - "./backend/pg_data:/var/lib/postgresql/data"
    env_file:
      - ./backend/.env
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:latest
    command: redis-server
    restart: always
    volumes:
      - "./backend/redis_data:/data"
    env_file:
      - ./backend/.env
    ports:
      - "6379:6379"

  celeryworker:
    build:
      context: ./backend
    command: celery -A config worker -l info -n worker1@%h
    env_file:
      - ./backend/.env
    volumes:
      - "./backend:/code"
    depends_on:
      - redis
      - backend

